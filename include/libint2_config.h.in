
/* This file is automatically processed by configure script.
   It MUST NOT be changed manually after configuration, otherwise
   the library will likely fail to compile or produce erroneous results
 */

#ifndef _libint2_include_libint2config_h_
#define _libint2_include_libint2config_h_

/* The host architecture. */
#undef LIBINT_HOST_ARCH

/* The target architecture. */
#undef LIBINT_TARGET_ARCH

/* The version number. */
#undef LIBINT_VERSION

/* The major version number. */
#undef LIBINT_MAJOR_VERSION

/* The minor version number. */
#undef LIBINT_MINOR_VERSION

/* The micro version number. */
#undef LIBINT_MICRO_VERSION

/* Prefix for all names in API */
#undef LIBINT_API_PREFIX

/* Max AM */
#undef LIBINT_MAX_AM

/* Max optimized AM */
#undef LIBINT_OPT_AM

/* Support ERI derivatives up to this order */
#undef INCLUDE_ERI

/* Support G12 derivatives up to this order */
#undef INCLUDE_G12

/* Support general G12 derivatives up to this order */
#undef INCLUDE_GENG12

/* Support G12DKH derivatives up to this order */
#undef INCLUDE_G12DKH

/* Max AM for ERI */
#undef ERI_MAX_AM

/* Max optimized AM for ERI */
#undef ERI_OPT_AM

/* Max AM for 1st-order derivative ERI */
#undef D1ERI_MAX_AM

/* Max AM for 2nd-order derivative ERI */
#undef D2ERI_MAX_AM

/* Max AM for G12 method integrals */
#undef G12_MAX_AM

/* Max optimized AM for G12 method integrals */
#undef G12_OPT_AM

/* Support [Ti,G12] ? */
#undef SUPPORT_T1G12

/* Max AM for G12 method integrals */
#undef GENG12_MAX_AM

/* Max optimized AM for G12 method integrals */
#undef GENG12_OPT_AM

/* Max AM for G12DKH method integrals */
#undef G12DKH_MAX_AM

/* Max optimized AM for G12DKH method integrals */
#undef G12DKH_OPT_AM

/* Whether integral sets can be unrolled */
#undef LIBINT_ENABLE_UNROLLING

/* Whether generic code can be used */
#undef LIBINT_ENABLE_GENERIC_CODE

/* maximum length of vectors */
#undef LIBINT_VECTOR_LENGTH

/* how to vectorize */
#undef LIBINT_VECTOR_METHOD

/* Specifies the ordering of cartesian Gaussians in a shell. Allowed values are defined at the bottom of this file -- also see configure.in*/
#undef LIBINT_CGSHELL_ORDERING

/* Specifies the set of shell quartets generated. Allowed values are defined at the bottom of this file -- also see configure.in*/
#undef LIBINT_SHELLQUARTET_SET

/* User-defined float type */
#undef LIBINT_USER_DEFINED_FLOAT

/* Accumulate integrals to the buffer? */
#undef LIBINT_ACCUM_INTS

/* Whether FLOP counting is supported */
#undef LIBINT_FLOP_COUNT

/* Generate single evaluator type? */
#undef LIBINT_SINGLE_EVALTYPE

/* Generate composite evaluators? */
#undef LIBINT_USE_COMPOSITE_EVALUATORS

/* Strategy for ERI evaluation */
#undef LIBINT_ERI_STRATEGY

/* have stdint.h ? */
#undef HAVE_STDINT_H

/* C++ compiler allows template with default params as template template parameter */
#undef CXX_ALLOWS_DEFPARAMTEMPLATE_AS_TEMPTEMPPARAM

/* is shared_ptr in boost? */
#undef HAVE_SHARED_PTR_IN_BOOST

/*
  Known orderings of cartesian functions
*/
#undef LIBINT_CGSHELL_ORDERING_STANDARD
#undef LIBINT_CGSHELL_ORDERING_INTV3
#undef LIBINT_CGSHELL_ORDERING_GAMESS
#undef LIBINT_CGSHELL_ORDERING_ORCA
/*
  Known sets of shell quartets
*/
#undef LIBINT_SHELLQUARTET_SET_STANDARD
#undef LIBINT_SHELLQUARTET_SET_ORCA

#endif 
