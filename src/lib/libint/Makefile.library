include $(TOPDIR)/src/lib/MakeVars
include $(TOPDIR)/src/lib/MakeSuffixRules
VPATH = $(SRCDIR) $(SRCTOPDIR)/include

NAME = libint2
TARGET = $(NAME).$(LIBSUF)
TARGET_HEADERS = libint2.h libint2_params.h libint2_iface.h

INCLUDE += -I.

#
# List all generated routines. Do it in a safe way in case the list is too long
#
TRUESRC0 = $(shell echo `ls __*.cc`)
TRUESRC1 = $(shell echo `ls _aB*.cc`)
TRUESRC2 = $(shell echo `ls OSVRR*.cc`)
TRUESRC3 = $(shell echo `ls HRR*.cc`)
TRUESRC4 = $(shell echo `ls libint2_*.cc`)
TRUESRC5 = $(shell echo `ls VRR*.cc`)
TRUESRC6 = $(shell echo `ls RR*.cc`)
NSRC0 = $(shell echo $(TRUESRC0) | wc -w)
NSRC1 = $(shell echo $(TRUESRC1) | wc -w)
NSRC2 = $(shell echo $(TRUESRC2) | wc -w)
NSRC3 = $(shell echo $(TRUESRC3) | wc -w)
NSRC4 = $(shell echo $(TRUESRC4) | wc -w)
NSRC5 = $(shell echo $(TRUESRC5) | wc -w)
NSRC6 = $(shell echo $(TRUESRC6) | wc -w)
LIBOBJ0 = $(TRUESRC0:%.cc=%.$(OBJSUF))
LIBOBJ1 = $(TRUESRC1:%.cc=%.$(OBJSUF))
LIBOBJ2 = $(TRUESRC2:%.cc=%.$(OBJSUF))
LIBOBJ3 = $(TRUESRC3:%.cc=%.$(OBJSUF))
LIBOBJ4 = $(TRUESRC4:%.cc=%.$(OBJSUF))
LIBOBJ5 = $(TRUESRC5:%.cc=%.$(OBJSUF))
LIBOBJ6 = $(TRUESRC6:%.cc=%.$(OBJSUF))
LIBOBJ = $(LIBOBJ0) $(LIBOBJ1) $(LIBOBJ2) $(LIBOBJ3) $(LIBOBJ4) $(LIBOBJ5) $(LIBOBJ6)

default:: $(TOPDIR)/lib/$(TARGET) $(TOPDIR)/include/$(NAME)/$(NAME).h

# this is how the static library is made
$(TOPDIR)/lib/$(NAME).a: $(LIBOBJ)
	/bin/rm -f $@
	@if test $(NSRC0) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ0); \
echo Added the following files to the library: $(LIBOBJ0); \
fi
	@if test $(NSRC1) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ1); \
echo Added the following files to the library: $(LIBOBJ1); \
fi
	@if test $(NSRC2) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ2); \
echo Added the following files to the library: $(LIBOBJ2); \
fi
	@if test $(NSRC3) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ3); \
echo Added the following files to the library: $(LIBOBJ3); \
fi
	@if test $(NSRC4) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ4); \
echo Added the following files to the library: $(LIBOBJ4); \
fi
	@if test $(NSRC5) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ5); \
echo Added the following files to the library: $(LIBOBJ5); \
fi
	@if test $(NSRC6) -gt 0; then \
$(AR) $(ARFLAGS) $@ $(LIBOBJ6); \
echo Added the following files to the library: $(LIBOBJ6); \
fi
	$(RANLIB) $@

# this is how shared library is made
$(TOPDIR)/lib/$(NAME).la: $(LIBOBJ)
	$(LTLINK) $(CXX) -o $@ $^ $(LTLINKLIBOPTS)

# the library is to be compiled using cxxgen
$(TOPDIR)/lib/$(NAME).a: CXX=$(CXXGEN)
$(TOPDIR)/lib/$(NAME).a: CXXFLAGS=$(CXXGENFLAGS)
$(TOPDIR)/lib/$(NAME).la: CXX=$(CXXGEN)
$(TOPDIR)/lib/$(NAME).la: CXXFLAGS=$(CXXGENFLAGS)

SRC_HEADERS = $(TARGET_HEADERS:%.h=$(SRCTOPDIR)/include/%.h)
$(TOPDIR)/include/$(NAME)/$(NAME).h: $(TARGET_HEADERS)
	$(INSTALL) $(INSTALLDIROPT) $(TOPDIR)/include/$(NAME)
	-$(INSTALL) $(INSTALLLIBOPT) $^ $(TOPDIR)/include/$(NAME)

libint2_params.h:

libint2_iface.h:

install:: install_inc install_target

install_inc::
	$(INSTALL) $(INSTALLDIROPT) $(includedir)
	-$(INSTALL) $(INSTALLLIBOPT) $(TARGET_HEADERS) $(includedir)

install_target:: $(TOPDIR)/lib/$(TARGET)
	$(INSTALL) $(INSTALLDIROPT) $(libdir)
	$(INSTALL) $(INSTALLLIBOPT) $< $(libdir)

clean:: oclean targetclean

distclean:: clean

oclean::
	-rm -rf *.$(OBJSUF)

targetclean::
	-rm -f $(TOPDIR)/lib/$(TARGET)

