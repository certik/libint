define([libint_mmm_version],[2.0.0])
define([libint_buildid],[prealpha])
define([libint_so_version],[2:0:0])

dnl --------- Begin ---------
dnl Process this file with autoconf to produce a configure script.
define([AC_CACHE_LOAD], )dnl for debugging configure.in
define([AC_CACHE_SAVE], )dnl for debugging configure.in
AC_PREREQ(2.57)
AC_INIT([Libint2],[libint_mmm_version],[edward.valeev@gatech.edu],[libint2])
AC_CONFIG_SRCDIR(src/bin/libint/rr.h)
AC_CONFIG_HEADER(include/libint2_config.h)
AC_CONFIG_AUX_DIR(bin)

dnl --- Compiling C++ only ---
AC_LANG(C++)

AC_CANONICAL_TARGET
AC_DEFINE_UNQUOTED(HOST_ARCH, "$host")
AC_DEFINE_UNQUOTED(TARGET_ARCH, "$target")

define([default_prefix_dash],ifelse(libint_buildid, ,[],[-]))
define([default_prefix],"/usr/local")

LIBINT_MMM_VERSION=libint_mmm_version
LIBINT_BUILDID=libint_buildid
AC_SUBST(LIBINT_MMM_VERSION)
AC_SUBST(LIBINT_BUILDID)
changequote(<<, >>)dnl
LIBINT_MAJOR_VERSION=`echo $LIBINT_MMM_VERSION|sed 's/\([0-9]*\)\.[0-9]*\.[0-9]*/\1/'`
LIBINT_MINOR_VERSION=`echo $LIBINT_MMM_VERSION|sed 's/[0-9]*\.\([0-9]*\)\.[0-9]*/\1/'`
LIBINT_MICRO_VERSION=`echo $LIBINT_MMM_VERSION|sed 's/[0-9]*\.[0-9]*\.\([0-9]*\)/\1/'`
changequote([, ])dnl
AC_DEFINE_UNQUOTED(LIBINT_MAJOR_VERSION,$LIBINT_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(LIBINT_MINOR_VERSION,$LIBINT_MINOR_VERSION)
AC_DEFINE_UNQUOTED(LIBINT_MICRO_VERSION,$LIBINT_MICRO_VERSION)
AC_SUBST(LIBINT_MAJOR_VERSION)
AC_SUBST(LIBINT_MINOR_VERSION)
AC_SUBST(LIBINT_MICRO_VERSION)


LIBINT_SO_VERSION=libint_so_version
AC_SUBST(LIBINT_SO_VERSION)

dnl --------- Features ---------

AC_ARG_ENABLE(debug,
[  --enable-debug          Compile with debugging options],
[
case $enableval in
  yes)
    DEBUG=yes
  ;;
  no)
    DEBUG=no
  ;;
  opt)
    DEBUG=opt
  ;;
  *)
    AC_MSG_ERROR([Invalid value for --enable-debug ($enableval)])
  ;;
esac
],[
    DEBUG=no
]
)

# can be used in the future to exclude source directories
EXCLUDED_DIRS=

AC_ARG_ENABLE(eri,
[  --enable-eri=N          Compile with support for up to N-th ERI derivatives],
[
if test $enableval -lt 0; then
  AC_MSG_ERROR([Invalid value for --enable-eri ($withval)])
fi
case $enableval in
  yes)
    INCLUDE_ERI=0
  ;;
  no)
    INCLUDE_ERI=no
  ;;
  *)
    INCLUDE_ERI=$enableval
  ;;
esac
],[
    INCLUDE_ERI=0
]
)

AC_ARG_ENABLE(g12,
[  --enable-g12=N           Compile with support for N-th derivatives of linear G12 energies],
[
if test $enableval -lt 0; then
  AC_MSG_ERROR([Invalid value for --enable-g12 ($withval)])
fi
case $enableval in
  yes)
    INCLUDE_G12=0
  ;;
  no)
    INCLUDE_G12=no
  ;;
  *)
    INCLUDE_G12=$enableval
  ;;
esac
],[
    INCLUDE_G12=no
]
)

ERI_MAX_AM=4
AC_ARG_WITH(eri-max-am,
[  --with-eri-max-am=N      Support ERIs for Gaussians of angular momentum up to N.],
if test $withval -le 0; then
  AC_MSG_ERROR([Invalid value for --with-eri-max-am ($withval)])
else
  ERI_MAX_AM=$withval
fi
if test $ERI_MAX_AM -ge 8; then
  AC_MSG_ERROR([Value for --with-eri-max-am too high ($withval). Are you sure you know what you are doing?])
fi
)

ERI_OPT_AM=$((($ERI_MAX_AM/2)+1))
AC_ARG_WITH(eri-opt-am,
[  --with-eri-opt-am=N       Optimize ERIs maximally for up to angular momentum N (N <= max-am).],
if test $withval -le $ERI_MAX_AM; then
  ERI_OPT_AM=$withval
fi
)

if test X$INCLUDE_ERI != Xno; then
  AC_DEFINE_UNQUOTED(INCLUDE_ERI,$INCLUDE_ERI)
  AC_SUBST(ERI_MAX_AM)
  AC_SUBST(ERI_OPT_AM)
  AC_DEFINE_UNQUOTED(ERI_MAX_AM,$ERI_MAX_AM)
  AC_DEFINE_UNQUOTED(ERI_OPT_AM,$ERI_OPT_AM)
fi

# check max am for G12 integrals, if needed
G12_MAX_AM=$ERI_MAX_AM
AC_ARG_WITH(g12-max-am,
[  --with-g12-max-am=N       Support integrals for linear G12 methods of angular momentum up to N.],
if test $withval -le 0 -o $withval -ge $ERI_MAX_AM; then
  AC_MSG_ERROR([Invalid value for --with-g12-max-am ($withval)])
else
  G12_MAX_AM=$withval
fi
)

G12_OPT_AM=$((($G12_MAX_AM/2)+1))
AC_ARG_WITH(g12-opt-am,
[  --with-g12-opt-am=N       Optimize G12 integrals for up to angular momentum N (N <= max-am).],
if test $withval -le $G12_MAX_AM; then
  G12_OPT_AM=$withval
fi
)

if test "X$INCLUDE_G12" != "Xno"; then
  AC_DEFINE_UNQUOTED(INCLUDE_G12,$INCLUDE_G12)
  AC_SUBST(G12_MAX_AM)
  AC_SUBST(G12_OPT_AM)
  AC_DEFINE_UNQUOTED(G12_MAX_AM,$G12_MAX_AM)
  AC_DEFINE_UNQUOTED(G12_OPT_AM,$G12_OPT_AM)
fi

#######
# check max am for derivative integrals, if needed
#######
if test $INCLUDE_ERI -gt 0; then

if test $ERI_MAX_AM -gt 3; then
  D1ERI_MAX_AM=3
else
  D1ERI_MAX_AM=$ERI_MAX_AM
fi
AC_ARG_WITH(d1eri-max-am,
[  --with-d1eri-max-am=N     Support first-order derivative ERIs for Gaussians of angular momentum up to N.],
if test $withval -le 0 -o $withval -ge $ERI_MAX_AM; then
  AC_MSG_ERROR([Invalid value for --with-d1eri-max-am ($withval)])
else
  D1ERI_MAX_AM=$withval
fi
)

D2ERI_MAX_AM=$D1ERI_MAX_AM
AC_ARG_WITH(d2eri-max-am,
[  --with-d2eri-max-am=N     Support second-order derivative ERIs for Gaussians of angular momentum up to N.],
if test $withval -le 0 -o $withval -ge $D2ERI_MAX_AM; then
  AC_MSG_ERROR([Invalid value for --with-d2eri-max-am ($withval)])
else
  D2ERI_MAX_AM=$withval
fi
)

AC_SUBST(D1ERI_MAX_AM)
AC_SUBST(D2ERI_MAX_AM)
AC_DEFINE_UNQUOTED(D1ERI_MAX_AM,$D1ERI_MAX_AM)
AC_DEFINE_UNQUOTED(D2ERI_MAX_AM,$D2ERI_MAX_AM)

fi

AC_ARG_WITH(float-type,
[  --with-float-type       Compute all integrals using the given float type.],
[
AC_DEFINE_UNQUOTED(LIBINT_USER_DEFINED_FLOAT,"$withval")
echo Using floating-point type: $withval
])

AC_ARG_ENABLE(flop-counter,
[  --enable-flop-counter   Support FLOP counting by the library.],
[
AC_DEFINE(LIBINT_FLOP_COUNT)
AC_MSG_RESULT([FLOP counter will be supported])
])

dnl
dnl Preferred strategies for evaluation
dnl
AC_ARG_WITH(eri-strategy,
[  --with-eri-strategy     Compute ERIs using the following strategy. This option is for experts ONLY.],
[
  case $withval in
    OS)
      AC_DEFINE_UNQUOTED(LIBINT_ERI_STRATEGY,0)
    ;;
    HGP)
      AC_DEFINE_UNQUOTED(LIBINT_ERI_STRATEGY,1)
    ;;
    HL)
      AC_DEFINE_UNQUOTED(LIBINT_ERI_STRATEGY,2)
    ;;
  esac
AC_MSG_RESULT([Using ERI strategy: $withval])
],
[AC_DEFINE(LIBINT_ERI_STRATEGY,1)]
)


BUILDID="libint_buildid"
AC_ARG_WITH(build-id,
[  --with-build-id         Gives an identifier for the build.],
BUILDID=$withval
)
AC_SUBST(BUILDID)
AC_DEFINE_UNQUOTED(LIBINT_BUILDID,"$BUILDID")

if test "$BUILDID"; then
  LIBINT_VERSION="$LIBINT_MMM_VERSION-$BUILDID"
else
  LIBINT_VERSION="$LIBINT_MMM_VERSION"
fi

AC_DEFINE_UNQUOTED(LIBINT_VERSION, "$LIBINT_VERSION")
AC_SUBST(LIBINT_VERSION)

ac_default_prefix="/usr/local/libint/$LIBINT_VERSION"

AC_ARG_WITH(cxx,
[  --with-cxx              Gives the name of the C++ compiler to use.],
CXX=$withval
)

CXXOPTIONS_OPT=
AC_ARG_WITH(cxx-optflags,
[  --with-cxx-optflags     Gives optimization flags for the C++ compiler.],
CXXOPTIONS_OPT=$withval
)

AC_ARG_WITH(cxxgen,
[  --with-cxxgen           Gives the name of the C++ compiler to compile generated code.],
CXXGEN=$withval
)

CXXGENOPTIONS_OPT=
AC_ARG_WITH(cxxgen-optflags,
[  --with-cxxgen-optflags  Gives optimization flags for the C++ compiler for generated source.],
CXXGENOPTIONS_OPT=$withval
)

AC_ARG_WITH(cxxdepend,
[  --with-cxxdepend        Gives the name of the C++ compiler with which to extract dependency information.],
CXXDEPEND=$withval,CXXDEPEND=$CXX
)
AC_SUBST(CXXDEPEND)

AC_ARG_WITH(ranlib,
[  --with-ranlib           Gives the name of the ranlib program.],
RANLIB=$withval
)

AC_ARG_WITH(ar,
[  --with-ar               Names the archive creator.],
AR=$withval
)

ARFLAGS=r
AC_ARG_WITH(ar-flags,
[  --with-ar-flags         Flags for the the archive creator.],
ARFLAGS=$withval
)
AC_SUBST(ARFLAGS)

AC_ARG_WITH(ld,
[  --with-ld               Names the object linker.],
LD=$withval
)

libintincludedir=$includedir
AC_ARG_WITH(libint-includedir,
[  --with-libint-includedir       Specifies include file install subdir.],
libintincludedir=$withval
)
AC_SUBST(libintincludedir)

AC_ARG_WITH(incdirs,
[  --with-incdirs          Specifies include directories (-Idir1 -Idir2).],
EXTRAINCDIRS=$withval
CPPFLAGS=$withval
echo Using extra include directories: $withval
)

AC_ARG_WITH(libs,
[  --with-libs             Specifies libraries (-llib1 -llib2).],
LIBS=$withval
echo Using extra libraries: $withval
)

LDFLAGS=
LIBDIRS=
AC_ARG_WITH(libdirs,
[  --with-libdirs          Specifies library directories (-Ldir1 -Ldir2).],
LIBDIRS=$withval
LDFLAGS=$withval
echo Using extra library directories: $withval
)

SCRATCHDIR=tmp
AC_ARG_WITH(scratchdir,
[  --with-scratchdir       Specifies the location for the machine-generated library source and object files.],
SCRATCHDIR=$withval
)
AC_SUBST(SCRATCHDIR)

dnl --------- Want absolute path for srcdir, not relative. ---------

if test X$ac_srcdir_defaulted = Xyes; then
  case $srcdir in
    ../*)
      srcdir=`(cd $srcdir; pwd)`
      #srcdir=`(cd $srcdir; echo $PWD)`
      ;;
  esac
fi

dnl --------- Checks for programs. ---------
AC_PROG_MAKE_SET
AC_PROG_LN_S
AC_PROG_INSTALL
AC_PROG_RANLIB
dnl ac_prog_cxx's order isn't what i need
AC_CHECK_PROGS(CXX, g++ c++ gcc CC cxx xlC_r, gcc)
dnl sees if CXX is a GNU compiler
AC_PROG_CXX
AC_PROG_CXXCPP
AC_CHECK_PROG(AR,ar,ar)
AC_CHECK_PROG(PERL,perl,perl)
AC_PATH_PROG(DOXYGEN,doxygen,,$PATH:/usr/local/bin)
AC_PATH_PROG(PDFLATEX,pdflatex,,$PATH:/usr/local/bin)
AC_PATH_PROG(PSLATEX,pslatex,,$PATH:/usr/local/bin)
AC_PATH_PROG(BIBTEX,bibtex,,$PATH:/usr/local/bin)
if test X$LD = X; then
  LD=$CXX
  AC_SUBST(LD)
fi

dnl The lack of certain tools is a show stopper

changequote(<<, >>)dnl

if [ X$PERL = X ]; then
  echo "Could not find the program perl!"
  echo "Most system vendors provide it."
  echo "It can also be obtained at"
  echo "ftp://prep.ai.mit.edu/pub/gnu"
  exit 1
fi

changequote([, ])dnl

dnl -------- Checks for compiler/linker options. ----------

# options needed only for optimization
if test "X$CXXOPTIONS_OPT" = X; then
  CXXOPTIONS_OPT=-O2
fi
# options needed only for debugging
CXXOPTIONS_DBG=-g
# options that are always needed
CXXOPTIONS_MISC=

OBJSUF=o
LIBSUF=a

dnl -- check how dependency information is built --

# The GNU compilers work with:
CXXDEPENDSUF=none
CXXDEPENDFLAGS=-M

/bin/rm -f depcheck.u depcheck.c depcheck.o

# Check for an IBM visual age C++ compiler
echo "#include <iostream>" > depcheck.cc
$CXX $CPPFLAGS $CXXFLAGS -M -E depcheck.cc > /dev/null 2>&1
if test -f depcheck.u; then
  CXXDEPENDSUF=u
  CXXDEPENDFLAGS="-M -E"
fi
/bin/rm -f depcheck.u depcheck.c depcheck.o

dnl -- special optimization options --

AC_MSG_CHECKING([for additional optimization options])
case $target in
  rs6000-ibm-aix3.2.* | rs6000-ibm-aix4.* | powerpc-ibm-aix4.* | powerpc-ibm-aix5.*)
    if test X$GXX != Xyes; then
      CXXOPTIONS_OPT="$CXXOPTIONS_OPT -qnolm -qrtti"
    fi
    AC_MSG_RESULT([rs6000 or powerpc])
  ;;
  *)
    AC_MSG_RESULT([none])
  ;;
esac

dnl -- special architecture options --

if test "X$CXXGENOPTIONS_OPT" = X; then
  AC_MSG_WARN([C++ optimization options are not given! For optimum performance use --with-cxxgen-optflags configure option])
fi

dnl ----------- check for GNU libc++-v3 prerelease bug ---------------

if test X$GXX = Xyes; then
AC_MSG_CHECKING([for GNU libc++-v3 prerelease bug])
AC_LINK_IFELSE([AC_LANG_SOURCE(
[[#include <stdio.h>
#include <$iostream>
]],[[
]])],[
AC_MSG_RESULT([no])
],
EXTRADEFINES="$EXTRADEFINES -D_ISOC99_SOURCE=1"
AC_MSG_RESULT([yes])
);
fi

dnl -- other options --

AC_MSG_CHECKING([GNU c++ library/template flags])
if test X$GXX = Xyes; then
  # automatic template instantiation causes problems with libstc++-v3
  #CXXOPTIONS_MISC="$CXXOPTIONS_MISC -fno-implicit-templates"
  #EXPLICIT_TEMPLATE_INSTANTIATION=yes
  #AC_DEFINE(EXPLICIT_TEMPLATE_INSTANTIATION)
  AC_MSG_RESULT([GNU])
else
  case $target in
    *)
      AC_MSG_RESULT([generic non GNU])
      ;;
    esac
fi

if test $DEBUG = yes; then
  CXXFLAGS="$CXXOPTIONS_DBG $CXXOPTIONS_MISC"
  LDFLAGS="$LDFLAGS -g"
elif test $DEBUG = opt; then
  CXXFLAGS="$CXXOPTIONS_DBG $COPTIONS_OPT $CXXOPTIONS_MISC"
  LDFLAGS="$LDFLAGS -g"
else
  CXXFLAGS="$CXXOPTIONS_OPT $CXXOPTIONS_MISC"
fi

AC_SUBST(EXTRAINCLUDE)

AC_SUBST(CXXFLAGS)
AC_SUBST(LIBDIRS)
AC_SUBST(OBJSUF)
AC_SUBST(LIBSUF)
AC_SUBST(CXXDEPENDSUF)
AC_SUBST(CXXDEPENDFLAGS)


dnl --------- configure compiler for generated source ---------
if test X$CXXGEN = X; then
  CXXGEN=$CXX
  CXXGENOPTIONS_OPT=$CXXOPTIONS_OPT
fi
if test $DEBUG = yes; then
  CXXGENFLAGS="$CXXOPTIONS_DBG $CXXGENOPTIONS_MISC"
elif test $DEBUG = opt; then
  CXXGENFLAGS="$CXXOPTIONS_DBG $CXXGENOPTIONS_OPT $CXXGENOPTIONS_MISC"
else
  CXXGENFLAGS="$CXXGENOPTIONS_OPT $CXXGENOPTIONS_MISC"
fi
AC_SUBST(CXXGEN)
AC_SUBST(CXXGENFLAGS)

dnl Check if sources compiled with CXX and CXXGEN can be linked together
CXX_COMPATIBLE_WITH_CXXGEN=yes
if test "X$CXX" != "X$CXXGEN"; then
AC_MSG_CHECKING([[for compatible cxx and cxxgen compilers]])
echo "extern void func1(); int main(int argc, char**argv) { func1(); } " > linkcheck1.cc
echo "void func1() {}" > linkcheck2.cc
$CXX $CPPFLAGS $CXXFLAGS -c linkcheck1.cc > /dev/null 2>&1
$CXXGEN $CPPFLAGS $CXXGENFLAGS -c linkcheck2.cc > /dev/null 2>&1
$LD $LDFLAGS -o linkcheck1 linkcheck1.o linkcheck2.o > /dev/null 2>&1
$CXX $LDFLAGS -o linkcheck2 linkcheck1.o linkcheck2.o > /dev/null 2>&1
$CXXGEN $LDFLAGS -o linkcheck3 linkcheck1.o linkcheck2.o > /dev/null 2>&1
if test -f linkcheck1 -a -f linkcheck2 -a -f linkcheck3; then
  AC_MSG_RESULT([[yes]])
else
  AC_MSG_RESULT([[no]])
  AC_MSG_WARN([[Compilers cxx and cxxgen produce incompatible code! You will not be able to test generated code.]])
  CXX_COMPATIBLE_WITH_CXXGEN=no
fi
/bin/rm -f linkcheck1 linkcheck2 linkcheck3  linkcheck1.cc linkcheck2.cc linkcheck1.o linkcheck2.o
fi

dnl --------- Check if either compiler will allow template template parameter
dnl           to be specialized using fewer params (i.e. due to default template params) ---------
echo "template <typename A, typename B = int> class T1 {};" > compcheck.cc
echo "template <typename C, template <typename D> class E = T1 > class T2 {};" >> compcheck.cc
echo "void f() { T2<int> x; }" >> compcheck.cc
AC_MSG_CHECKING([[if cxx allows template with default params as template template parameter]])
$CXX $CPPFLAGS $CXXFLAGS -c compcheck.cc > /dev/null 2>&1
if test ! -f compcheck.o; then
  AC_MSG_RESULT([[no]])
  AC_MSG_ERROR([[C++ compiler (cxx) cannot be used to compile Libint. Try gcc-3.4.]])
else
  AC_MSG_RESULT([[yes]])
fi
rm -f compcheck.o
if test "X$CXX" != "X$CXXGEN"; then
AC_MSG_CHECKING([[if cxxgen allows template with default params as template template parameter]])
$CXXGEN $CPPFLAGS $CXXGENFLAGS -c compcheck.cc > /dev/null 2>&1
if test ! -f compcheck.o; then
  AC_MSG_RESULT([[no]])
  AC_MSG_WARN([[You will not be able to test generated code.]])
  CXX_COMPATIBLE_WITH_CXXGEN=no
else
  AC_MSG_RESULT([[yes]])
fi
rm -f compcheck.cc compcheck.o
fi

AC_SUBST(CXX_COMPATIBLE_WITH_CXXGEN)

dnl -------- Checks for architecture specific features. --------
dnl (Doesn't work for cross compilation.)
dnl AC_CHECK_SIZEOF(void*)

AC_SUBST(EXTRADEFINES)

dnl ---------- Checks for header files. -----------

AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h stdint.h)

dnl -- Checks for typedefs, structures, and compiler characteristics. --
AC_TYPE_SIZE_T

CPPFLAGS="$CPPFLAGS" \
LD="$LD" LDFLAGS="$LDFLAGS" LIBS="-lm $LIBS $FLIBS" \
LN_S="$LN_S" NM="$NM" RANLIB="$RANLIB" \

dnl --------- Shared library configuration. ---------

enablelibtool=yes
AC_ARG_ENABLE(libtool,
[  --disable-libtool       Do not use libtool.],
[
case $enableval in
  yes)
  ;;
  no)
    enablelibtool=no
  ;;
  *)
    AC_MSG_ERROR([Invalid value for --(dis|en)able-libtool ($enableval)])
  ;;
esac
])

if test "$enablelibtool" = yes; then

dnl by default make only static libraries
AC_DISABLE_SHARED
AC_PROG_LIBTOOL

OBJSUF=lo
LIBSUF=la

else

enable_shared=no

fi

if test "$enable_shared" = "no"; then
  OBJSUF=o
  LIBSUF=a
fi

ENABLESHARED=$enable_shared
AC_SUBST(ENABLESHARED)

dnl make Makefiles in object tree
$PERL $srcdir/bin/objectdir.pl $EXCLUDED_DIRS $srcdir

AC_CONFIG_FILES([src/bin/test_eri/test_eri.pl],[chmod +x src/bin/test_eri/test_eri.pl])
AC_CONFIG_FILES([src/bin/test_eri/time_eri.pl],[chmod +x src/bin/test_eri/time_eri.pl])
AC_CONFIG_FILES([src/bin/test_eri/run_time_eri.pl],[chmod +x src/bin/test_eri/run_time_eri.pl])
AC_CONFIG_FILES(src/bin/MakeVars src/lib/MakeVars src/lib/MakeRules src/lib/MakeSuffixRules
                doc/MakeVars doc/MakeRules doc/MakeSuffixRules doc/macros.tex doc/classdoc/doxygen.cfg)

dnl --------- Done! ---------
AC_OUTPUT

